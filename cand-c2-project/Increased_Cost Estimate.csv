Group hierarchy,Region,Description,Service,Upfront,Monthly,First 12 months total,Currency,Configuration summary
My Estimate,US East (Ohio),,Amazon Virtual Private Cloud (VPC),0,37.35,448.20,USD,Number of NAT Gateways (1)
My Estimate,US East (Ohio),,Elastic Load Balancing,0,36.74,440.88,USD,Number of Application Load Balancers (2)
My Estimate,US East (Ohio),WebServer,Amazon EC2,0,4106.78,49281.36,USD,"Operating system (Linux), Storage for each EC2 instance (General Purpose SSD (gp2)), Storage amount (100 GB), Snapshot Frequency (2x Daily), Amount changed per snapshot (3 GB), DT Inbound: Internet (100 GB per month) 
, DT Outbound: Internet (100 GB per month) 
, DT Intra-Region: (100 GB per month) 
, Workload (Consistent, Number of instances: 4), Advance EC2 instance (m5a.8xlarge), Pricing strategy (undefined)"
My Estimate,US East (Ohio),,Amazon EC2,0,2728.08,32736.96,USD,"Operating system (Linux), Quantity (3), Pricing strategy (On-Demand Instances 1 Year No Upfront), Storage for each EC2 instance (General Purpose SSD (gp2)), Storage amount (100 GB), Instance type (c5a.8xlarge)"
My Estimate,US East (Ohio),,Amazon RDS for PostgreSQL,0,12543.24,150518.88,USD,"Quantity (3), Pricing strategy (On-Demand Instances 1 Year No Upfront), Storage volume (General Purpose SSD (gp2)), Storage amount (100 GB per month), Instance type (db.m5.8xlarge)"
My Estimate,US East (Ohio),,S3 Standard,0,3.5,42.00,USD,S3 Standard storage (100 GB per month)
My Estimate,US East (Ohio),,Data Transfer,0,0,0.00,USD,"DT Inbound: Not selected (0 TB per month) 
, DT Outbound: Not selected (0 TB per month) 
"
My Estimate,US East (Ohio),,Amazon Elastic IP,0,7.3,87.60,USD,"Number of EC2 instances (2), Number of EIPs per instance (2)"



Acknowledgement
"* AWS Pricing Calculator provides only an estimate of your AWS fees and doesn't include any taxes that might apply. Your actual fees depend on a variety of factors, including your actual usage of AWS services."

Rationale
With the higher budget, I achieved better availability and responsivenes by increasing the number of web and app server instances. I also scaled the database server up to make sure it does not become a bottleneck due to the higher number of possible requests.